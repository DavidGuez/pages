<div id="partial_title">Votre candidature aux élections <%= election['name'] %></div>
<link type="text/css" href="//code.cloudcms.com/alpaca/1.5.22/bootstrap/alpaca.min.css" rel="stylesheet" />
<link type="text/css" rel="stylesheet" href="https://assets-cdn.ziggeo.com/v1-stable/ziggeo.css" />
<link type="text/css" rel="stylesheet" href="https://s3.us-east-2.amazonaws.com/reprezentus/templates/css/slim.min.css" />
<script src="//cloud.tinymce.com/stable/tinymce.min.js?apiKey=vhb3ke8xhmxm0nalqrxxkrdw4lafueg4ngtl085qh7bkuxd5"></script>
<style>
.classic-tabs.tabs-red {
	background-color: #f44336;
}
.slim {
	border-radius: 0.5rem;
}
textarea {
	height:auto !important;
}
.ba-videorecorder-container {
	border: 2px solid #d91d1c;
	max-width:640px;
	max-height:480px;
}
.video-recorder-initial .btn-primary {
	background-color: #527bdd;
	border: 1px solid #d91d1c;
}
</style>
<!-- Nav tabs -->
<p>Lorsque vous aurez complété les informations demandées, cliquez sur ce bouton pour valider et publier votre candidature&nbsp;: <button id="publishme" class="btn btn-success btn-rounded">Publier ma candidature</button></p>
<div class="tabs-wrapper"> 
	<ul class="nav classic-tabs tabs-red" id="candidature-tabs" role="tablist">
		<li class="nav-item">
			<a id="panel1-tab" class="nav-link waves-light active" data-toggle="tab" name="profil" href="#panel1" role="tab"><i class="fa fa-user fa-2x" aria-hidden="true"></i><br> Mon Profil</a>
		</li>
		<li class="nav-item">
			<a id="panel2-tab" class="nav-link waves-light" data-toggle="tab" name="candidature" href="#panel2" role="tab"><i class="fa fa-pencil-square-o fa-2x" aria-hidden="true"></i><br> Ma Candidature</a>
		</li>
		<li class="nav-item">
			<a id="panel3-tab" class="nav-link waves-light" data-toggle="tab" name="video" href="#panel3" role="tab"><i class="fa fa-video-camera fa-2x" aria-hidden="true"></i><br> Ma Vidéo</a>
		</li>
	</ul>
</div>
<div class="tab-content card">
	<!--Panel 1-->
	<div class="tab-pane fade in show active" name="profil" id="panel1" role="tabpanel">
		<p>Merci pour votre engagement ! Pour enregistrer votre candidature, merci de bien vouloir rentrer les informations suivantes.</p>
		<div class="row">
			<div class="col-lg-3 col-sm-4 col-xs-12" style="max-width:400px;max-height:400px;">
				<div id="photo-tab">
					<div class="slim"
	  data-meta-user-id="<%= citoyen['slug'] %>"
   data-ratio="1:1"
   data-size="400,400"
   data-label="Cliquez ou glissez/déposez votre photo ici"
   data-push="true"
   data-service="/api/citizen/<%= citoyen['user_key'] %>/profile/picture">
   <% if !citoyen['photo'].nil? and !citoyen['photo'].empty? then %>
	   <img src="https://s3.eu-central-1.amazonaws.com/<%= citoyen['photo'] %>" crossorigin="anonymous">
   <% end %>
   <input type="file" name="slim[]">
					</div>
					<div style="margin:15px auto;width:255px;">
						<button type="submit" class="btn btn-large btn-primary">Enregistrer ma photo</button>
					</div>
				</div>

			</div>
			<div class="col-lg-9 col-sm-8 col-xs-12">
				<div id="profile-tab"></div>
			</div>
		</div>
	</div>
	<div class="tab-pane fade" name="candidature" id="panel2" role="tabpanel">
		<p>Dites-nous en plus sur votre engagement et votre candidature.</p>
		<div class="row">
			<div class="col-lg-12 col-sm-12 col-xs-12">
				<div id="candidature-tab"></div>
			</div>
		</div>
	</div>
	<div class="tab-pane fade" name="video" id="panel3" role="tabpanel">
		<h4>Enregistrez votre vidéo de présentation</h4>
		<div class="row">
			<div class="col-lg-4 col-sm-6 col-xs-12">
				<p class="text-justify">Si vous avez une webcam ou si vous utilisez votre téléphone portable, vous pouvez enregistrer une courte (45 secondes maximum) vidéo pour présenter votre candidature et vos motivations.</p>
				<p class="text-justify">Vous pouvez ré-enregistrer votre vidéo autant de fois que vous voulez jusqu'à ce qu'elle vous plaise.</p>
			</div>
			<div class="col-lg-8 col-sm-6 col-xs-12">
				<div id="ziggeo-recorder"></div>
			</div>
		</div>
	</div>
</div>
<div class="modal fade" id="verification" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<!--Content-->
		<div class="modal-content">
			<!--Header-->
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
				<h4 class="modal-title w-100" id="myModalLabel">Validation de votre candidature</h4>
			</div>
			<!--Body-->
			<div class="modal-body">
				<div id="status_success" style="display:none;" class="validation_text">
					<p>Merci ! Votre candidature est en ligne.</p>
				</div>
				<div id="status_error" style="display:none;" class="validation_text">
					<p>Merci de régler les problèmes suivants afin que nous puissions publier votre candidature :</p>
					<ol>
						<li id="missing_photo" style="display:none;" class="validation_text text-justify">Votre profil n'a pas de photo. Une photo de vous est nécessaire.</li>
						<li id="missing_profil" style="display:none;" class="validation_text text-justify">Il semblerait que vous n'ayez pas rempli votre profil encore...</li>
						<li id="missing_candidature" style="display:none;" class="validation_text text-justify">Avez-vous bien complété toutes les informations relatives à votre candidature ?</li>
						<li id="missing_donation" style="display:none;" class="validation_text text-justify">Il semblerait que vous ne vous soyez pas encore acquitté de votre adhésion à LaPrimaire.org. Pour adhérer, il suffit de faire un don de 30 euros ou plus (30 euros équivalent à 10,20 euros après réduction fiscale). Vos dons nous permettent de couvrir les frais de fonctionnement de LaPrimaire.org. Sans eux LaPrimaire.org ne pourrait pas exister.</li>
					</ol>
				</div>
			</div>
			<!--Footer-->
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
				<a type="button" class="btn btn-primary validation_text"  id="public_page" style="display:none;cursor:pointer;">Voir ma page publique</a>
				<a target="_blank" type="button" class="btn btn-primary validation_text" href="https://laprimaire.org/adherer/?e=<%= citoyen['email'] %>" id="donation_page" style="display:none;">Adhérer</a>
			</div>
		</div>
		<!--/.Content-->
	</div>
</div>
<script type="text/javascript">
function pageReady() {
	$('#public_page').on("click",function() {
		$('#verification').modal('hide');
		router.navigate('/citoyen/<%= citoyen['user_key'] %>/election/<%= election['slug'] %>/candidat/<%= citoyen['slug'] %>');
	});
	$('#publishme').on("click",function() {
		$.get('/api/election/<%= election['slug'] %>/candidate/<%= citoyen['slug'] %>/validate')
			.done(function(data) {
				$('.validation_text').hide();
				var error=false;
				data=JSON.parse(data);
				errors=data['errors'];
				publish_status=data['status'];
				if (publish_status=='error') {
					for (var key in errors) {
						if (!errors.hasOwnProperty(key))  { continue; }
						$('#'+errors[key]).show();
					}
					$('#status_error').show();
					if ($('#missing_donation').is(':visible')) {
						$('#donation_page').show();
					}
				} else {
					$('#status_success').show();
					$('#public_page').show();
				}
			})
		.fail(function(data) { show_notification(data); });
		$('#verification').modal('show');
	});
	var dataProfile = {
		"firstname": "<%= citoyen['firstname'] %>",
		"lastname": "<%= citoyen['lastname'] %>",
		"age": "<%= citoyen['age'] %>",
		"gender": "<%= citoyen['gender'] %>",
		"address1": "<%= citoyen['address1'] %>",
		"address2": "<%= citoyen['address2'] %>",
		"city": "<%= citoyen['city'] %>",
		"zipcode": "<%= citoyen['zipcode'] %>",
		"country": "<%= citoyen['country'] %>",
		"birthplace": "<%= citoyen['birthplace'] %>",
		"job": "<%= citoyen['job'] %>",
		"phone": "<%= citoyen['telephone'] %>",
		"secteur": "<%= citoyen['secteur'] %>",
		"country": "<%= citoyen['country'] %>"
	};
	var schemaProfile = {
		"type": "object",
		"properties": {
			"firstname": {
				"type": "string",
				"required":true
			},
			"lastname": {
				"type": "string",
				"required":true
			},
			"age": {
				"minimum":18,
				"maximum":120,
				"required":true
			},
			"gender": {
				"enum": ["M","F"],
				"required":true
			},
			"address1": {
				"type": "string",
				"required":true
			},
			"address2": {
				"type": "string"
			},
			"city": {
				"type": "string",
				"required":true
			},
			"zipcode": {
				"type": "string",
				"required":true
			},
			"country": {
				"type": "string",
				"required":true
			},
			"birthplace": {
				"type": "string",
				"required":true
			},
			"job": {
				"type": "string",
				"required":true
			},
			"secteur": {
				"required":true,
				"enum":["Agriculture","Associatif","Armée, sécurité","Art, design","Audit, gestion","Audiovisuel - Spectacle","Automobile","Banque, assurance","Bâtiment et travaux publics","Chimie, pharmacie","Culture - Artisanat d'art","Commerce, distribution","Communication - Marketing, publicité","Construction aéronautique, ferroviaire et navale","Droit, justice","Édition - Journalisme","Électronique","Enseignement","Énergie","Environnement","Bois (filière)","Fonction publique","Hôtellerie, restauration","Industrie alimentaire","Informatique, internet et télécom","Maintenance, entretien","Mode et industrie textile","Logistique, transport","Santé","Social","Recherche","Sport, loisirs – Tourisme","Traduction, interprétation","Verre, béton, céramique"]
			},
			"phone": {
				"type": "string",
				"required":true
			}
		}
	};
	var optionsProfile = {
		"hideInitValidationError": true,
		"form":{
			"buttons": {
				"register": {
					"type":"button",
					"styles":"btn btn-primary",
					"title":"Sauvegarder et continuer",
					"click": function() {
						this.refreshValidationState(true);
						if (this.isValid(true)) {
							var value=this.getValue();
							$.post('/api/election/<%= election['slug'] %>/candidate/<%= citoyen['slug'] %>/info',{candidate_infos: value})
								.done(function(data) {
									$('#panel2-tab').tab('show');
									show_notification(data);
								})
							.fail(function(data) { show_notification(data); });
						}

					}
				}
			}
		},
		"fields": {
			"firstname": {
				"type": "text",
				"label": "Prénom",
				"fieldClass":"md-form"
			},
			"lastname": {
				"type": "text",
				"label": "Nom",
				"fieldClass":"md-form"
			},
			"age": {
				"type": "integer",
				"label": "Votre age",
				"fieldClass":"md-form"
			},
			"gender": {
				"type":"radio",
				"label":"Vous êtes",
				"optionLabels":{
					"M":"Un homme",
					"F":"Une femme",
				},
				"fieldClass":"form-group",
				"vertical":false
			},
			"address1":{
				"type": "text",
				"label": "Votre adresse",
				"placeholder": "",
				"fieldClass":"md-form"
			},
			"address2":{
				"type": "text",
				"label": "Complément d'adresse (optionnel)",
				"placeholder": "",
				"fieldClass":"md-form"
			},
			"city":{
				"type": "text",
				"label": "Ville",
				"fieldClass":"md-form",
				"placeholder": ""
			},
			"zipcode":{
				"type": "text",
				"label": "Code postal",
				"fieldClass":"md-form",
			},
			"country": {
				"type": "text",
				"label": "Pays",
				"fieldClass":"md-form"
			},
			"phone": {
				"type": "text",
				"label": "Numéro de téléphone",
				"fieldClass":"md-form"
			},
			"birthplace": {
				"type": "text",
				"label": "Votre lieu de naissance",
				"fieldClass":"md-form"
			},
			"job": {
				"type": "text",
				"label": "Votre profession",
				"fieldClass":"md-form"
			},
			"secteur": {
				"label": "Votre secteur d'activité",
				"fieldClass":"browser-default",
				"hideNone":false
			}
		}
	};
	var schemaCandidature = {
		"type": "object",
		"properties": {
			"suppleant_yn": {
				"type":"string",
				"enum": ["OUI","NON"],
				"required":true
			},
			"suppleant_name": {
				"type": "string",
				"required":true
			},
			"suppleant_email": {
				"format": "email",
				"required":true
			},
			"supported_candidate": {
				"required":true,
				"enum":["Alexandre Jardin","Antoine Waechter","Bastien Faudot","Benoît Hamon","Charlotte Marchandise","Christian Troadec","Emmanuel Macron","François Asselineau","François Fillon","Henri Guaino","Jacques Cheminade","Jean Lassalle","Jean-Luc Mélenchon","Jean-Pierre Gorges","Marine Le Pen","Michèle Alliot-Marie","Nathalie Arthaud","Nicolas Dupont-Aignan","Nicolas Miguet","Oscar Temaru","Paul Mumbach","Philippe Poutou","Pierre Larrouturou","Rama Yade","Stéphane Guyot","Yannick Jadot"]
			},
			"political_party": {
				"required":true,
				"enum":["Cap21 (C21)","Citoyens du Vote Blanc (CVB)","Debout La France (DLF)","En Marche (EM)","Europe Ecologie Les Verts (EELV)","Front National (FN)","Génération Citoyens (GC)","La France qui Ose (LFQO)","Les Citoyens1 (LC1)","Les Républicains (LR)","Lutte Ouvrière (LO)","MaVoix (MV)","Mouvement 100% (M100%)","Mouvement Démocrate (MODEM)","Nous Citoyens (NC)","Nouveau Parti Anticapitaliste (NPA)","Nouvelle Donne (ND)","Objectif France (OF)","Parti Chrétien-Démocrate (PCD)","Parti Communiste Français (PCF)","Parti de Gauche (PG)","Parti Pirate (PP)","Parti Radical (PR)","Parti Socialiste (PS)","Sens Commun (SC)","Solidarité et Progrès (SP)","Union des Démocrates et Indépendants (UDI)","Union Populaire Républicaine (UPR)"]
			},
			"already_candidate_yn": {
				"enum": ["NON","OUI","PLUSIEURS"],
				"type":"string",
				"required":true
			},
			"already_candidate": {
				"type": "string",
				"required":true
			},
			"already_elected_yn": {
				"enum": ["OUI","NON"],
				"required":true
			},
			"already_elected": {
				"type": "string",
				"required":true
			},
			"website": {
				"format": "uri",
			},
			"twitter": {
				"format": "uri",
			},
			"facebook": {
				"format": "uri",
			},
			"presentation": {
				"required":true
			}
		},
		"dependencies":{
			"suppleant_name":["suppleant_yn"],
			"suppleant_email":["suppleant_yn"],
			"already_candidate":["already_candidate_yn"],
			"already_elected":["already_elected_yn"]
		}
	};
	var optionsCandidature = {
		"hideInitValidationError": true,
		"form":{
			"buttons": {
				"save": {
					"type":"button",
					"styles":"btn btn-primary",
					"title":"Sauvegarder et continuer",
					"click": function() {
						this.refreshValidationState(true);
						if (this.isValid(true)) {
							var value=this.getValue();
							$.post('/api/election/<%= election['slug'] %>/candidate/<%= citoyen['slug'] %>/info',{candidate_infos: value})
								.done(function(data) {
									$('#panel3-tab').tab('show');
									show_notification(data);
								})
							.fail(function(data) { show_notification(data); });
						}

					}
				}
			}
		},
		"fields": {
			"suppleant_yn": {
				"type":"radio",
				"label": "Avez-vous déjà un(e) suppléant(e) ?",
				"fieldClass":"form-group",
				"vertical":false

			},
			"suppleant_name": {
				"type": "text",
				"label": "Quel est le nom de votre suppléant(e) ?",
				"fieldClass":"md-form",
				"dependencies": { "suppleant_yn":"OUI" }
			},
			"suppleant_email": {
				"label": "Quel est l'email de votre suppléant(e) ?",
				"fieldClass":"md-form",
				"dependencies": { "suppleant_yn":"OUI" }
			},
			"supported_candidate": {
				"label": "Quel(le) candidat(e) à la présidentielle soutenez-vous ?",
				"fieldClass":"browser-default",
				"hideNone":false
			},
			"political_party": {
				"label": "Quel mouvement citoyen / un parti politique soutenez-vous ?",
				"fieldClass":"browser-default",
				"hideNone":false
			},
			"already_candidate_yn": {
				"label": "Avez-vous déjà été candidat(e) à une élection publique ?",
				"fieldClass":"form-group",
				"vertical":false
			},
			"already_candidate": {
				"label": "Laquelle/Lesquelles",
				"dependencies": { "already_candidate_yn":["OUI","PLUSIEURS"] },
				"fieldClass":"md-form"
			},
			"already_elected_yn": {
				"label": "Avez-vous déjà été exercé un mandat public ?",
				"fieldClass":"form-group",
				"vertical":false
			},
			"already_elected": {
				"label": "Lequel/Lesquels",
				"dependencies": { "already_elected_yn": "OUI" },
				"fieldClass":"md-form"
			},
			"website": {
				"type":"url",
				"label": "Votre site web",
				"fieldClass":"md-form"
			},
			"twitter": {
				"type":"url",
				"label": "Votre twitter",
				"fieldClass":"md-form"
			},
			"facebook": {
				"type":"url",
				"label": "Votre facebook",
				"fieldClass":"md-form"
			},
			"presentation": {
				"type":"tinymce",
				"label":"Courte présentation et motivation de votre candidature (300 mots maximum)",
				"rows":6,
				"cols":80,
				"wordlimit":300,
				"fieldClass":"browser-default,tiny-mce-editor"
			}
		}
	};

	for (var key in dataProfile) {
		if (!dataProfile.hasOwnProperty(key))  { continue; }
		if (dataProfile[key]) { optionsProfile['fields'][key]['active']=true; }
	}
	$.getScript('https://cdn.jsdelivr.net/handlebarsjs/4.0.5/handlebars.min.js')
		.done(function() {
			$.getScript('https://s3.us-east-2.amazonaws.com/reprezentus/templates/js/alpaca.min.js')
				.done(function() {
					Alpaca.registerMessages({
						"notOptional": "Ce champ est obligatoire",
						"stringValueTooSmall": "La valeur minimum pour ce champ est {0}",
						"stringValueTooLarge": "La valeur maximum pour ce champ est {0}",
						"stringNotAnInteger": "Cette valeur n'est pas un nombre entier"
					});
					$("#profile-tab").alpaca({
						"data": dataProfile,
						"schema": schemaProfile,
						"options": optionsProfile,
						"view": "bootstrap-edit"
					});
					$.getScript('https://s3.us-east-2.amazonaws.com/reprezentus/templates/js/slim.kickstart.min.js');
				});
		});
	$('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
		$.get('/api/election/<%= election['slug'] %>/candidate/<%= citoyen['slug'] %>/summary')
			.done(function(data) {
				infos=JSON.parse(data);
				if (e.target.name=='profil') {
					for (var key in infos) {
						if (!infos.hasOwnProperty(key))  { continue; }
						if (infos[key]) { 
							if (optionsProfile['fields'][key]!=undefined) {
								optionsProfile['fields'][key]['active']=true;
							}
						}
					}
					$("#profile-tab").alpaca({
						"data": infos,
						"schema": schemaProfile,
						"options": optionsProfile,
						"view": "bootstrap-edit"
					});
				} else if (e.target.name=='candidature') {
					for (var key in infos) {
						if (!infos.hasOwnProperty(key))  { continue; }
						if (infos[key]) { 
							if (optionsCandidature['fields'][key]!=undefined) {
								optionsCandidature['fields'][key]['active']=true;
							}
						}
					}
					$("#candidature-tab").alpaca({
						"data": infos,
						"schema": schemaCandidature,
						"options": optionsCandidature,
						"view": "bootstrap-edit",
						"postRender": function() {
							tinymce.init({
								selector: 'textarea',
								language_url: 'https://s3.us-east-2.amazonaws.com/reprezentus/templates/js/tinymce_fr_FR.js',
								height: 250,
								menubar: false,
								plugins: [
									'advlist autolink lists link image charmap print preview anchor',
									'searchreplace visualblocks code fullscreen',
									'insertdatetime media table contextmenu paste code'
								],
								toolbar: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
								content_css: '//www.tinymce.com/css/codepen.min.css'
							});
						}
					});
				} else if (e.target.name=='video') {
					$.getScript('https://assets-cdn.ziggeo.com/v1-r23/ziggeo.js')
						.done(function() {
							ZiggeoApi.token = "dec836dec48133bf9f0225552ae31ad2";
							ZiggeoApi.Events.on("system_ready", function() {
								var recorder = new ZiggeoApi.V2.Recorder({
									element: document.getElementById("ziggeo-recorder"),
									attrs: {
										responsive: true,
										recordingwidth: 640,
										recordingheight: 480,
										key: '<%= citoyen['slug'] %>',
										'auto-crop': false,
										'auto-pad': true,
										timelimit: 60,
										title: 'Présentation vidéo de <%= citoyen['firstname']+' '+citoyen['lastname'] %>',
										rerecordable: true,
										allowupload: false,
										allowrecord: true,
										'force-overwrite': true
									}
								});
								recorder.activate();
								recorder.on("verified", function() {
									var value={ 'video_webcam':'<%= citoyen['slug'] %>' }
									$.post('/api/election/<%= election['slug'] %>/candidate/<%= citoyen['slug'] %>/info',{candidate_infos: value})
										.done(function(data) {
											show_notification(data);
										})
									.fail(function(data) { show_notification(data); });
								})
							});
						});

				}
			});
	})

}
</script>
